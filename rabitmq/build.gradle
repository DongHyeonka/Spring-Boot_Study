plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.springboot'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// Spring Security Messaging
	implementation 'org.springframework.security:spring-security-messaging'
	// Spring Data JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// WebSocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	// Spring RabbitMQ
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	// Spring Boot Actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	// Micrometer (메트릭스)
    implementation 'io.micrometer:micrometer-registry-prometheus'
	// RabbitMQ 클라이언트
	implementation 'org.springframework.amqp:spring-rabbit'
	// JSON
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// H2 Database
	implementation 'com.h2database:h2'
	// Spring Web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// Lombok Test
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	useJUnitPlatform()
}
